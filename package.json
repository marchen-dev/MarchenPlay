{
  "name": "Marchen",
  "type": "module",
  "version": "0.0.1-alpha.7",
  "private": true,
  "packageManager": "pnpm@9.13.2",
  "description": "Local video danmaku player",
  "author": "Suemor",
  "license": "GPL-3.0",
  "homepage": "https://github.com/suemor233/MarchenPlay",
  "repository": {
    "url": "https://github.com/suemor233/MarchenPlay",
    "type": "git"
  },
  "main": "./out/main/index.js",
  "scripts": {
    "build": "npm run typecheck && electron-vite build",
    "build:linux": "electron-vite build && electron-builder --linux --publish never",
    "build:mac": "node scripts/install-darwin-deps.js && electron-vite build && electron-builder --mac --publish never",
    "build:unpack": "npm run build && electron-builder --dir",
    "build:web": "rm -rf out/web && vite build",
    "build:win": "npm run build && electron-builder --win --publish never",
    "bump": "vv",
    "dev": "electron-vite dev",
    "dev:web": "vite",
    "format": "prettier --write .",
    "lint": "eslint",
    "lint:fix": "eslint --fix",
    "postinstall": "electron-builder install-app-deps",
    "prepare": "pnpm exec simple-git-hooks && shx test -f .env || shx cp .env.example .env",
    "start": "electron-vite preview",
    "typecheck": "npm run typecheck:node && npm run typecheck:web",
    "typecheck:node": "tsc --noEmit -p tsconfig.node.json --composite false",
    "typecheck:web": "tsc --noEmit -p tsconfig.web.json --composite false"
  },
  "dependencies": {
    "@egoist/tipc": "^0.3.2",
    "@electron-toolkit/preload": "^3.0.1",
    "@electron-toolkit/utils": "^3.0.0",
    "@ffmpeg-installer/ffmpeg": "^1.1.0",
    "@ffprobe-installer/ffprobe": "^2.1.2",
    "@fontsource/manrope": "^5.0.21",
    "@remix-run/router": "^1.19.2",
    "@suemor/xgplayer": "^3.0.21",
    "@tanstack/react-query": "^5.51.23",
    "class-variance-authority": "^0.7.0",
    "click-to-react-component": "^1.1.0",
    "clsx": "^2.1.1",
    "danmu.js": "^1.1.13",
    "dayjs": "^1.11.13",
    "dexie": "^4.0.8",
    "dexie-react-hooks": "^1.1.7",
    "electron-log": "^5.2.0",
    "electron-updater": "^6.3.9",
    "fluent-ffmpeg": "^2.1.3",
    "framer-motion": "^11.11.9",
    "jotai": "^2.9.3",
    "libass-wasm": "^4.1.0",
    "lodash-es": "^4.17.21",
    "lucide-react": "^0.460.0",
    "nanoid": "^5.0.7",
    "next-themes-suemor": "^0.3.1",
    "ofetch": "^1.3.4",
    "react-router-dom": "6.28.0",
    "spark-md5": "^3.0.2",
    "tailwind-merge": "^2.5.2",
    "tailwindcss-animate": "^1.0.7"
  },
  "devDependencies": {
    "@electron-toolkit/tsconfig": "^1.0.1",
    "@electron/notarize": "^2.5.0",
    "@hrgui/libass-wasm-ts": "^1.0.3",
    "@iconify-json/mingcute": "^1.1.19",
    "@iconify/tailwind": "^1.1.2",
    "@radix-ui/react-accordion": "^1.2.0",
    "@radix-ui/react-context-menu": "^2.2.2",
    "@radix-ui/react-dialog": "^1.1.2",
    "@radix-ui/react-popover": "^1.1.2",
    "@radix-ui/react-progress": "^1.1.0",
    "@radix-ui/react-scroll-area": "^1.1.0",
    "@radix-ui/react-select": "^2.1.2",
    "@radix-ui/react-slider": "^1.2.1",
    "@radix-ui/react-slot": "^1.1.0",
    "@radix-ui/react-switch": "^1.1.1",
    "@radix-ui/react-tabs": "^1.1.0",
    "@radix-ui/react-toast": "^1.2.1",
    "@radix-ui/react-toggle": "^1.1.0",
    "@tanstack/react-query-devtools": "^5.59.16",
    "@types/fluent-ffmpeg": "^2.1.27",
    "@types/lodash-es": "4.17.12",
    "@types/node": "^22.0.0",
    "@types/react": "^18.3.3",
    "@types/react-dom": "^18.3.0",
    "@vitejs/plugin-react": "^4.3.1",
    "autoprefixer": "^10.4.20",
    "daisyui": "^4.12.10",
    "dotenv": "^16.4.5",
    "electron": "^32.0.0",
    "electron-builder": "^25.0.0",
    "electron-vite": "^2.3.0",
    "eslint": "^9.13.0",
    "eslint-config-hyoban": "^3.1.11",
    "lint-staged": "^15.2.8",
    "nbump": "^2.0.4",
    "postcss": "^8.4.41",
    "prettier": "^3.3.3",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "rollup-plugin-copy": "^3.5.0",
    "shx": "^0.3.4",
    "simple-git-hooks": "^2.11.1",
    "tailwindcss": "^3.4.9",
    "typescript": "^5.5.2",
    "vite": "^5.3.1"
  },
  "simple-git-hooks": {
    "pre-commit": "npx lint-staged"
  },
  "lint-staged": {
    "*": "eslint --fix"
  },
  "bump": {
    "before": [
      "git pull --rebase"
    ],
    "commit_message": "chore(release): release v${NEW_VERSION}",
    "changelog": true
  }
}
